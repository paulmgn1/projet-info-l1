import socket
import threading

# Adresse et port du serveur
HOST = '127.0.0.1'
PORT = 55555

# Liste pour stocker les connexions clientes
clients = []

# Fonction de gestion des connexions clientes
def handle_client(client_socket, client_address):
    print(f"[NEW CONNECTION] {client_address} connected.")

    while True:
        # Recevoir les données du client
        message = client_socket.recv(1024).decode('utf-8')

        # Vérifier si le client a fermé la connexion
        if not message:
            print(f"[DISCONNECTED] {client_address} disconnected.")
            clients.remove(client_socket)
            client_socket.close()
            break

        # Envoyer le message à tous les autres clients connectés
        for c in clients:
            if c != client_socket:
                c.send(message.encode('utf-8'))

# Fonction principale
def main():
    # Créer un socket TCP/IP
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Lier le socket à l'adresse et au port
    server_socket.bind((HOST, PORT))

    # Écouter les connexions entrantes
    server_socket.listen()

    print(f"[LISTENING] Server is listening on {HOST}:{PORT}")

    while True:
        # Accepter une nouvelle connexion
        client_socket, client_address = server_socket.accept()

        # Ajouter le client à la liste des clients
        clients.append(client_socket)

        # Démarrer un thread pour gérer la connexion cliente
        client_thread = threading.Thread(target=handle_client, args=(client_socket, client_address))
        client_thread.start()

if __name__ == "__main__":
    main()
